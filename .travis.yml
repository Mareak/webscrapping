language: python
python:
- '3.7'
services:
- docker
branches:
  only:
  - dev

jobs:
  include:
    - stage: test
      name: "Test pylint unitest"
      script:
        - export SECRET_KEY=$SECRET_KEY
        - export MYSQL_DATABASE=$MYSQL_DATABASE
        - export MYSQL_USER=$MYSQL_USER
        - export MYSQL_PASSWORD=$MYSQL_PASSWORD
        - docker-compose up -d 
        - docker-compose run webscrapping test
    - stage: push
      name: "Push on gitHub/dockerHub/azureRepo"
      script:
        - export MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
        - export MYSQL_DATABASE=$MYSQL_DATABASE
        - export MYSQL_USER=$MYSQL_USER
        - export MYSQL_PASSWORD=$MYSQL_PASSWORD 
        - bash ./config/continuous-deployment/push.sh
    - stage: deploy
      name: "Create terraform and deploy"
      script: 
        - docker build -t k8s:deploy -f ./config/docker/Dockerfile.k8s --build-arg ARM_SUBSCRIPTION_ID=$ARM_SUBSCRIPTION_ID --build-arg ARM_CLIENT_ID=$ARM_CLIENT_ID --build-arg ARM_CLIENT_SECRET=$ARM_CLIENT_SECRET --build-arg ARM_TENANT_ID=$ARM_TENANT_ID --build-arg AZURE_USERNAME_REG=$AZURE_USERNAME_REG --build-arg AZURE_PASSWORD_REG=$AZURE_PASSWORD_REG --build-arg AZURE_SERVER_REG=$AZURE_SERVER_REG --build-arg TAG=$TAG --build-arg MYSQL_PASSWORD=$MYSQL_PASSWORD --build-arg MYSQL_USER=$MYSQL_USER --build-arg MYSQL_DATABASE=$MYSQL_DATABASE --build-arg SECRET_KEY=$SECRET_KEY --build-arg MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD --build-arg AZ_RG_K8S=$AZ_RG_K8S --build-arg AZ_CLUSTERNAME_K8S=$AZ_CLUSTERNAME_K8S .
        - docker run k8s:deploy

env:
  global:
  - TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
